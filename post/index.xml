<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 人生如逆旅，我亦是行人。</title><link>https://xiking.win/post/</link><description>Recent content in Posts on 人生如逆旅，我亦是行人。</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>yongman</copyright><lastBuildDate>Wed, 06 Dec 2023 01:00:00 +0000</lastBuildDate><atom:link href="https://xiking.win/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Mac 下 Finder 替代品 QSpace Pro</title><link>https://xiking.win/2023/12/06/qspace-pro-mac-finder/</link><pubDate>Wed, 06 Dec 2023 01:00:00 +0000</pubDate><guid>https://xiking.win/2023/12/06/qspace-pro-mac-finder/</guid><description>作为一个长期使用 Mac 的用户，我一直在寻找一款能够比 Finder 做得更好的文件管理工具。最近我发现了 Qspace Pro，它不仅具备 Finder 的基本功能，而且还加入了许多实用</description></item><item><title>Linux中Zero-Copy的实现</title><link>https://xiking.win/2021/10/08/5-linux-zero-copy/</link><pubDate>Fri, 08 Oct 2021 01:00:00 +0000</pubDate><guid>https://xiking.win/2021/10/08/5-linux-zero-copy/</guid><description>1. 读写系统调用 理解什么是zero-copy，首先从简单的例子中，更容易理解。 read(file, tmp_buf, len); write(socket, tmp_buf, len); 上面的例子，实现从文件中读取数据，然后将读取的数据写</description></item><item><title>电信宽带电视IPTV公网内网多设备播放</title><link>https://xiking.win/2021/06/20/4-use-iptv-in-multiple-devices/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://xiking.win/2021/06/20/4-use-iptv-in-multiple-devices/</guid><description>一般IPTV只能实现单个设备播放，一个宽带也只能接入一个IPTV，如果加中有多个设备需要同时播放电视直播，就无法实现了。 当然可以通过在网上找</description></item><item><title>德业除湿机接入HomeAssistant</title><link>https://xiking.win/2020/11/12/3-deye-dehumidifer-add-to-homeassistant/</link><pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate><guid>https://xiking.win/2020/11/12/3-deye-dehumidifer-add-to-homeassistant/</guid><description>由于德业除湿机比较小众，homeassistant官方和社区也没有现成的集成可用，要接入homeassistant只能自己来研究一下交互协议</description></item><item><title>记一次线上Linux网卡丢包问题排查</title><link>https://xiking.win/2020/05/18/2-linux-kernel-net-packet-dropped/</link><pubDate>Mon, 18 May 2020 01:00:00 +0000</pubDate><guid>https://xiking.win/2020/05/18/2-linux-kernel-net-packet-dropped/</guid><description>1. 问题现象 线上环境业务反馈业务访问服务存在大量超时，通过查看监控，发现集群内3个envoy进程pod网卡tx队列丢包严重。 看到对应网卡pps</description></item><item><title>Linux网卡多队列实现</title><link>https://xiking.win/2020/05/15/1-linux-network-multiqueue/</link><pubDate>Fri, 15 May 2020 01:00:00 +0000</pubDate><guid>https://xiking.win/2020/05/15/1-linux-network-multiqueue/</guid><description>rps Receive Package Steering，是用来在软件层面实现网卡报文在多个cpu处理的负载均衡。 对于多队列网卡，硬件能够支持网卡中断的处理cpu核，但是往往</description></item><item><title>记一次Redis超时抖动问题排查</title><link>https://xiking.win/2020/04/21/redis-request-time-cost-troubleshoot/</link><pubDate>Tue, 21 Apr 2020 01:00:00 +0000</pubDate><guid>https://xiking.win/2020/04/21/redis-request-time-cost-troubleshoot/</guid><description>1. 问题现象 业务客户端请求Redis集群客户端看经常出现30-70ms的超时抖动，而执行的命令都是O(1)的复杂度，预期正常返回在0.1ms内</description></item><item><title>再看Redis数据过期</title><link>https://xiking.win/2020/04/01/redis-expire-key-review/</link><pubDate>Wed, 01 Apr 2020 07:00:00 +0000</pubDate><guid>https://xiking.win/2020/04/01/redis-expire-key-review/</guid><description>在Redis中，数据的过期可分为两种，一种是主动过期淘汰，一种是lazy方式淘汰。 主动过期淘汰就是在Redis中定时任务主动对数据进行采样，</description></item><item><title>数据仓库Snowflake论文</title><link>https://xiking.win/2020/01/15/snowflake-data-warehouse/</link><pubDate>Wed, 15 Jan 2020 17:53:38 +0000</pubDate><guid>https://xiking.win/2020/01/15/snowflake-data-warehouse/</guid><description>数据仓库和数据库的区别就是： 数据库：OLTP，数据操作会包含读写，并且要求时延较低，操作结果会是决定上层操作成功与否的关键。数据量一般有限。</description></item><item><title>etcd raft lib使用示例分析</title><link>https://xiking.win/2019/09/22/etcd-raft-example-analysis/</link><pubDate>Sun, 22 Sep 2019 21:00:38 +0000</pubDate><guid>https://xiking.win/2019/09/22/etcd-raft-example-analysis/</guid><description>此前使用hashicorp raft库简单实现了一个redis协议的kv存储Leto，介绍文章。 当时选择hashicorp raft库，包装好，</description></item><item><title>hexo迁移hugo并配置ci自动部署github pages</title><link>https://xiking.win/2019/07/18/hexo-to-hugo-with-gitlab-ci-github-pages/</link><pubDate>Thu, 18 Jul 2019 16:28:13 +0800</pubDate><guid>https://xiking.win/2019/07/18/hexo-to-hugo-with-gitlab-ci-github-pages/</guid><description>最近一直收到github pages的通知，由hexo生成的静态站存在安全风险，要求升级，升级hexo会升级一大堆依赖node_modules</description></item><item><title>一个glibc内存分配场景分析</title><link>https://xiking.win/2019/04/25/a-glibc-malloc-scenario/</link><pubDate>Thu, 25 Apr 2019 10:53:38 +0000</pubDate><guid>https://xiking.win/2019/04/25/a-glibc-malloc-scenario/</guid><description>最近看到了2014年关于twemproxy中的issue中有人提到采用pipeline方式大量请求会导致twemproxy占用大量内存的讨论</description></item><item><title>imgur图床迁移github图床</title><link>https://xiking.win/2019/03/28/imgur-to-github-images-bed/</link><pubDate>Thu, 28 Mar 2019 15:58:20 +0000</pubDate><guid>https://xiking.win/2019/03/28/imgur-to-github-images-bed/</guid><description>因为imgur被dns劫持，所以blog图片都裂了，没有好的办法，只能找其他的替代图床。之前也一直不忍心使用github在用作图床，毕竟gi</description></item><item><title>DNS劫持和污染原理</title><link>https://xiking.win/2019/03/27/dns-cache-pollution/</link><pubDate>Wed, 27 Mar 2019 10:30:23 +0000</pubDate><guid>https://xiking.win/2019/03/27/dns-cache-pollution/</guid><description>之前一直用的imgur图床最近几天突然打不开了，浏览器打开提示证书不对，证书是facebook的证书，看来是dns把域名解析到faceboo</description></item><item><title>IP MTU和TCP MSS</title><link>https://xiking.win/2019/01/21/ip-mtu-and-tcp-mss/</link><pubDate>Mon, 21 Jan 2019 11:04:19 +0000</pubDate><guid>https://xiking.win/2019/01/21/ip-mtu-and-tcp-mss/</guid><description>使用群晖的vmm虚拟lede软路由几个月，在nas下载流量较大的时候会出现lede掉线，多拨不稳定掉线，但是又想使用lede的插件中心，方便</description></item><item><title>LRU算法和LRU变种</title><link>https://xiking.win/2018/12/26/lru-and-lru-variants/</link><pubDate>Wed, 26 Dec 2018 16:57:53 +0000</pubDate><guid>https://xiking.win/2018/12/26/lru-and-lru-variants/</guid><description>1. LRU 实现最简单的lru实现，其中保存的是最近一段时间访问的数据，当一个新数据被访问，数据会被加入队列头，如果队列超过长度限制，就在尾部淘汰；</description></item><item><title>群晖nas软路由实现全站https</title><link>https://xiking.win/2018/12/05/synology-lede-to-https/</link><pubDate>Wed, 05 Dec 2018 23:08:37 +0000</pubDate><guid>https://xiking.win/2018/12/05/synology-lede-to-https/</guid><description>家用宽带从移动转向电信，体验果然不一样了，从此可以告别移动大内网，告别了frp内网穿透，有了公网ip。原来一直在用的http突然完全暴露在公</description></item><item><title>RocksDB参数调优</title><link>https://xiking.win/2018/12/05/rocksdb-tuning/</link><pubDate>Wed, 05 Dec 2018 17:58:49 +0000</pubDate><guid>https://xiking.win/2018/12/05/rocksdb-tuning/</guid><description>RocksDB对比LevelDB暴露了很多参数来适应更多的应用场景，带来的好处就是可以通过tuning使系统性能达到最大，当然，如果tuni</description></item><item><title>玩转Home Assistant - 集成小米空气净化器、米家智能家居、broadlink设备、dueros、google assistant等</title><link>https://xiking.win/2018/11/15/home-assistant-with-xiaomi-airpurifier/</link><pubDate>Thu, 15 Nov 2018 01:27:53 +0000</pubDate><guid>https://xiking.win/2018/11/15/home-assistant-with-xiaomi-airpurifier/</guid><description>Home Assistant是一个开源智能自动化平台，python语言编写，支持多种平台，官方支持树莓派、普通linux主机和docker方式，支持</description></item><item><title>反向二进制迭代(Reverse Binary Iteration)算法</title><link>https://xiking.win/2018/11/07/reverse-binary-iteration/</link><pubDate>Wed, 07 Nov 2018 15:01:01 +0000</pubDate><guid>https://xiking.win/2018/11/07/reverse-binary-iteration/</guid><description>redis中一个db就是一个大dict，也就是实现的可伸缩hash表。其操作支持遍历scan类操作，按stl容器中场景的逻辑，如果一个迭代器</description></item><item><title>了解负载均衡</title><link>https://xiking.win/2018/11/06/load-balancer-learn/</link><pubDate>Tue, 06 Nov 2018 19:43:23 +0000</pubDate><guid>https://xiking.win/2018/11/06/load-balancer-learn/</guid><description>种类 硬件负载均衡 F5 TP-Link 硬件一般都是定制化，价格比较贵，不太符合互联网公司的价值观，要使用普通pc来完成专业硬件的工作。 Nginx Plus和F5 BIG-IP 110</description></item><item><title>黑群晖Synology DS918+打造个人网络媒体中心</title><link>https://xiking.win/2018/11/05/synology-nas-diy-network/</link><pubDate>Mon, 05 Nov 2018 23:53:38 +0000</pubDate><guid>https://xiking.win/2018/11/05/synology-nas-diy-network/</guid><description>还记得几年前，一个机缘巧合，碰到有同学利用台式机安装了一个黑群晖，当时自己也将废弃在角落08年的联想笔记本成功跑了黑群晖，然后继续被仍在房间</description></item><item><title>Redis冷热数据分离混合存储实现 - IO任务异步处理</title><link>https://xiking.win/2018/10/24/redis-bot-cold-data-seperation-new-bio/</link><pubDate>Wed, 24 Oct 2018 16:33:03 +0000</pubDate><guid>https://xiking.win/2018/10/24/redis-bot-cold-data-seperation-new-bio/</guid><description>在demo实现中，第一版的异步化处理中，采用的是类似redis中对list的BLOCK类型操作，但是与list BLOCK操作不同的是，lis</description></item><item><title>Redis冷热数据分离混合存储实现 - 读写任务异步化</title><link>https://xiking.win/2018/09/30/redis-hot-cold-data-seperation-bio/</link><pubDate>Sun, 30 Sep 2018 17:59:14 +0000</pubDate><guid>https://xiking.win/2018/09/30/redis-hot-cold-data-seperation-bio/</guid><description>redis的单线程处理模型，对于客户端请求都会变成串行处理，所以也不存在数据竞争的问题。对于冷数据需要的经过磁盘IO，这对于redis的高并</description></item><item><title>Redis冷热数据分离混合存储实现 - index存储</title><link>https://xiking.win/2018/09/20/redis-hot-cold-data-seperation-index/</link><pubDate>Thu, 20 Sep 2018 18:04:45 +0000</pubDate><guid>https://xiking.win/2018/09/20/redis-hot-cold-data-seperation-index/</guid><description>为了实现冷热数据分离，热数据在内存，冷数据会置换到持久化存储，但是为了保证内存检索高效，会将所有key和频率统计信息保存在内存。冷数据的选择</description></item><item><title>冷热数据分离调研和概要方案</title><link>https://xiking.win/2018/09/13/data-hot-cold-auto-management/</link><pubDate>Thu, 13 Sep 2018 11:36:47 +0000</pubDate><guid>https://xiking.win/2018/09/13/data-hot-cold-auto-management/</guid><description>一. 背景 随着硬件的发展，持久化存储的速度得以提升，但是硬件成本相比内存单位的成本会有大幅度下降，并且全内存缓存存储理想应用场景是随机高速访问</description></item><item><title>Anna伯克利高性能可扩展的kv存储系统论文</title><link>https://xiking.win/2018/09/10/anna-fast-scalable-cost-save-key-value-storage/</link><pubDate>Mon, 10 Sep 2018 18:59:03 +0000</pubDate><guid>https://xiking.win/2018/09/10/anna-fast-scalable-cost-save-key-value-storage/</guid><description>昨天被朋友圈的一片软文刷屏了，秒杀Redis的KVS上云了！伯克利重磅开源Anna 1.0 什么秒杀，吊打。。。这种小编是标题骗点击，着实无语。 做技</description></item><item><title>对数据冷热分离存储的思考</title><link>https://xiking.win/2018/09/06/hot-and-cold-data-separation-storage/</link><pubDate>Thu, 06 Sep 2018 23:54:21 +0000</pubDate><guid>https://xiking.win/2018/09/06/hot-and-cold-data-separation-storage/</guid><description>对于冷热数据分层存储的最直接的目的就是节省成本，计算机结构里，内存-&amp;gt;nvme ssd-&amp;gt;ssd-&amp;gt;机械盘，访问速度依次降低</description></item><item><title>使用docker-compose一键运行tidis</title><link>https://xiking.win/2018/08/31/tidis-run-with-docker-compose/</link><pubDate>Fri, 31 Aug 2018 15:26:19 +0000</pubDate><guid>https://xiking.win/2018/08/31/tidis-run-with-docker-compose/</guid><description>Tidis是基于tikv的兼容redis协议持久化存储，得益于分布式kv存储tikv，tidis能够实现水平扩展，数据安全存储和分布式事务支</description></item><item><title>通读PolarFS分布式文件系统论文</title><link>https://xiking.win/2018/08/22/polarfs-distributed-file-system-paper/</link><pubDate>Wed, 22 Aug 2018 19:27:29 +0000</pubDate><guid>https://xiking.win/2018/08/22/polarfs-distributed-file-system-paper/</guid><description>今天在hn上看到阿里的PolarFS论文，简单读了一下，感觉分布式系统整体架构就是江湖，分久必合，合久必分。 分布式系统的架构不外乎两种，一种</description></item><item><title>计算二进制中比特位1的个数</title><link>https://xiking.win/2018/08/17/calculate-bit-one-count/</link><pubDate>Fri, 17 Aug 2018 09:36:39 +0000</pubDate><guid>https://xiking.win/2018/08/17/calculate-bit-one-count/</guid><description>比如一个32位的无符号整型，如果要统计其中二进制中1的个数，直接从最低位遍历，不管二进制中1的个数有多少，时间复杂度是一样的。 还有比较快速的</description></item><item><title>函数隐式声明 implicit declaration of function</title><link>https://xiking.win/2018/08/14/implicit-declaration-of-function/</link><pubDate>Tue, 14 Aug 2018 16:58:36 +0000</pubDate><guid>https://xiking.win/2018/08/14/implicit-declaration-of-function/</guid><description>默认函数声明Implicit declaration function引发的血案 文件1中定义了函数，并malloc了一段内存，返回指针 char *func1(char *arg){ char *c = (char*)malloc(size); return c; } 在文件2中</description></item><item><title>HyperLogLog - 基数统计算法</title><link>https://xiking.win/2018/08/09/hyperloglog/</link><pubDate>Thu, 09 Aug 2018 19:29:22 +0000</pubDate><guid>https://xiking.win/2018/08/09/hyperloglog/</guid><description>如果有一个需求，就是要统计一个全球性活跃网站的访问UV，根据用户ip识别。 当然可以是要set数据结构，把所有的ip都塞到set数据结构中，最</description></item><item><title>正向代理和反向代理</title><link>https://xiking.win/2018/08/06/forward-proxy-and-reverse-proxy/</link><pubDate>Mon, 06 Aug 2018 11:29:59 +0000</pubDate><guid>https://xiking.win/2018/08/06/forward-proxy-and-reverse-proxy/</guid><description>虽然经常使用nginx或者科学上网搭建代理，对于代理分类具体含义还是需要解析下。 正向代理 正向代理就是一个位于客户端和目标服务器的代理服务器，</description></item><item><title>LevelDB中snapshot和compaction</title><link>https://xiking.win/2018/08/03/leveldb-key-snapshot-compaction/</link><pubDate>Fri, 03 Aug 2018 19:23:54 +0000</pubDate><guid>https://xiking.win/2018/08/03/leveldb-key-snapshot-compaction/</guid><description>本文简单记录了leveldb中有关key的种类、memtable的操作、snapshot的原理和Compaction。 Key LookupKey: klength|UserKey|tag InternalKey: UserKey</description></item><item><title>LevelDB版本管理和读写操作</title><link>https://xiking.win/2018/08/01/leveldb-mvcc-read-write-put-delete/</link><pubDate>Wed, 01 Aug 2018 20:07:32 +0000</pubDate><guid>https://xiking.win/2018/08/01/leveldb-mvcc-read-write-put-delete/</guid><description>LevelDB是一个轻量级的key value存储系统，存储结构采用LSM-Tree，对写操作优化，特别是普通的机械盘。 LevelDB是Big</description></item><item><title>Leto - 基于raft快速实现一个key-value存储系统</title><link>https://xiking.win/2018/07/30/implement-key-value-store-using-raft/</link><pubDate>Mon, 30 Jul 2018 16:16:17 +0000</pubDate><guid>https://xiking.win/2018/07/30/implement-key-value-store-using-raft/</guid><description>Leto基于raft和redis协议的key value存储系统 raft是一种类似于paxos的一致性算法，但是相对paxos，raft更易于</description></item><item><title>Mac osx让工作更有效率的桌面控制管理工具</title><link>https://xiking.win/2018/07/18/desktop-automation-tools-for-mac/</link><pubDate>Wed, 18 Jul 2018 10:05:46 +0000</pubDate><guid>https://xiking.win/2018/07/18/desktop-automation-tools-for-mac/</guid><description>1. Hammerspoon-高效操作窗口和鼠标 自己在工作中一直在使用mac，并且外接显示器多屏幕，一直在找可以快速将鼠标焦点移动到另外屏幕的工</description></item><item><title>Tidis - 基于tikv实现兼容redis协议分布式事务存储</title><link>https://xiking.win/2018/07/17/tidis-distributed-transactional-redis-protocol-disk-storage/</link><pubDate>Tue, 17 Jul 2018 09:40:27 +0000</pubDate><guid>https://xiking.win/2018/07/17/tidis-distributed-transactional-redis-protocol-disk-storage/</guid><description>1. 背景 redis本身的定位是高速缓存，有多种数据结构支持，全量内存，使用成本高，当数据量达到一定规模后，用户不得不考虑将部分冷数据从redi</description></item><item><title>SSH tunnel隧道网络穿透</title><link>https://xiking.win/2018/07/13/ssh-tunnel-proxy-and-port-forwarding/</link><pubDate>Fri, 13 Jul 2018 14:47:05 +0000</pubDate><guid>https://xiking.win/2018/07/13/ssh-tunnel-proxy-and-port-forwarding/</guid><description>SSH是一种安全的传输协议，ssh命令也是linux和mac上最常用的远程登录命令。出了远程登录，ssh还有一些其他的功能。比如隧道网络穿透</description></item><item><title>清理git历史中的敏感信息</title><link>https://xiking.win/2018/07/05/clean-github-sensitive-data-from-history/</link><pubDate>Thu, 05 Jul 2018 14:44:15 +0000</pubDate><guid>https://xiking.win/2018/07/05/clean-github-sensitive-data-from-history/</guid><description>由于使用的编辑器带有代码头自动填充，或者不小心把密码明文写进了代码，并且不小心push到了github，当你发现的时候一般的补救措施是起不到</description></item><item><title>Percolator论文学习</title><link>https://xiking.win/2018/06/22/percolator-paper/</link><pubDate>Fri, 22 Jun 2018 14:44:15 +0000</pubDate><guid>https://xiking.win/2018/06/22/percolator-paper/</guid><description>Percolator是Google为了解决搜索引擎中增量索引，替代原先的MR系统，可以实现增量更新索引，使得新的网页更快的被用户搜索到。 离线</description></item><item><title>新的开始</title><link>https://xiking.win/2018/06/01/a-new-start/</link><pubDate>Fri, 01 Jun 2018 10:16:44 +0000</pubDate><guid>https://xiking.win/2018/06/01/a-new-start/</guid><description>刚开始接触blog还是在学校，把平时的一些学习记录在当时比较流行的CSDN上，后来感觉上面广告太多，当时就考虑购买了云主机环境，自己搭建了w</description></item></channel></rss>